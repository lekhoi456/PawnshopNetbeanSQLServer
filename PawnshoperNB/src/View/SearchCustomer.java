package View;

import Model.CustomerModel;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 * Search Customer JDialog is a child of NewContract
 *
 * @author KhoiLeQuoc
 */
public class SearchCustomer extends JDialog {

    DefaultTableModel tableCustomer;

    /**
     * Creates new form SearchCustomer
     */
    public SearchCustomer(JFrame parent) throws Exception {
        super(parent, true);
        initComponents();
        this.setLocationRelativeTo(null);
        Image favicon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/favicon.png"));
        this.setIconImage(favicon);
        tableCustomer = (DefaultTableModel) tblCustomer.getModel();
        searchByKeyword("");
        this.setVisible(true);

    }

    public void searchByKeyword(String keyword) throws Exception {
        CustomerModel customerModel = new CustomerModel();
        tableCustomer.setRowCount(0);
        for (int i = 0; i < customerModel.getList().size(); i++) {
            if (customerModel.getList().get(i).getCustomerName().toLowerCase().contains(keyword.toLowerCase())) {
                int customerId = customerModel.getList().get(i).getCustomerId();
                String customerName = customerModel.getList().get(i).getCustomerName();
                String phoneNumber = customerModel.getList().get(i).getPhoneNumber();

                tableCustomer.insertRow(tblCustomer.getRowCount(), new Object[]{customerId, customerName, phoneNumber});
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new javax.swing.JTextField();
        pnlScrollTable = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        bgSearchCustomer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search Customer");
        setMaximumSize(new java.awt.Dimension(500, 500));
        setMinimumSize(new java.awt.Dimension(500, 500));
        setName("SearchCustomerDialog"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSearch.setBackground(new java.awt.Color(255, 255, 255));
        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSearch.setBorder(null);
        txtSearch.setSelectionColor(new java.awt.Color(119, 91, 200));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 61, 400, 38));

        pnlScrollTable.setBackground(new java.awt.Color(255, 255, 255));
        pnlScrollTable.setForeground(new java.awt.Color(30, 30, 30));
        pnlScrollTable.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        pnlScrollTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tblCustomer.setBackground(new java.awt.Color(255, 255, 255));
        tblCustomer.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblCustomer.setForeground(new java.awt.Color(30, 30, 30));
        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer name", "Phone number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustomer.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCustomer.setGridColor(new java.awt.Color(30, 30, 30));
        tblCustomer.setMaximumSize(new java.awt.Dimension(460, 330));
        tblCustomer.setMinimumSize(new java.awt.Dimension(460, 330));
        tblCustomer.setPreferredSize(new java.awt.Dimension(460, 330));
        tblCustomer.setRowHeight(25);
        tblCustomer.setSelectionBackground(new java.awt.Color(119, 91, 200));
        tblCustomer.setShowVerticalLines(false);
        tblCustomer.getTableHeader().setReorderingAllowed(false);
        tblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblCustomerMousePressed(evt);
            }
        });
        pnlScrollTable.setViewportView(tblCustomer);
        if (tblCustomer.getColumnModel().getColumnCount() > 0) {
            tblCustomer.getColumnModel().getColumn(0).setResizable(false);
            tblCustomer.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblCustomer.getColumnModel().getColumn(1).setResizable(false);
            tblCustomer.getColumnModel().getColumn(1).setPreferredWidth(250);
            tblCustomer.getColumnModel().getColumn(2).setResizable(false);
            tblCustomer.getColumnModel().getColumn(2).setPreferredWidth(110);
        }

        getContentPane().add(pnlScrollTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 460, 330));

        bgSearchCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/searchCustomer.png"))); // NOI18N
        getContentPane().add(bgSearchCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        try {
            searchByKeyword(txtSearch.getText());
        } catch (Exception ex) {
            Logger.getLogger(SearchCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        repaint();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblCustomerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomerMousePressed
        if (tblCustomer.getSelectedRowCount() == 0) {
            return;
        }
        customerId = Integer.parseInt(tblCustomer.getModel().getValueAt(tblCustomer.getSelectedRow(), 0).toString());
        setCustomerId(customerId);
        this.dispose();
    }//GEN-LAST:event_tblCustomerMousePressed

    public void setCustomerId(int customerId) {
        this.customerId = customerId;
    }

    public int getCustomerId() {
        return this.customerId;
    }

    private int customerId;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgSearchCustomer;
    private javax.swing.JScrollPane pnlScrollTable;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
